[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "zcmds"
description = "Cross platform(ish) productivity commands written in python."
readme = "README.md"
requires-python = ">=3.10"
keywords = ["zcmds"]
license = { text = "BSD 3-Clause License" }
classifiers = ["Programming Language :: Python :: 3"]
dynamic = ["version", "scripts"]
dependencies = [
    "ytclip",
    "pdf2image",
    "ffmpeg-normalize",
    "appdirs",
    "PyQt6",
    "PyPDF2",
    "jsoncomment",
    "pyserial",
    "openai>=1.3.7",
    "anthropic>=0.21.0",
    "consolemd",
    "inputimeout",
    "download",
    "playaudio>=1.0.5",
    "gTTS",
    "py7zr",
    "static-ffmpeg>=2.5",
    "zcmds_win32>=1.2.12; platform_system=='Windows'",
    "static-sox",
    "json5",
    "pipx",
    "GitPython",
    "transcribe-anything>=2.7.27",
    "send2trash",
    "magic-wormhole",
    "wormhole-tx",
    "pillow-heif",
    "advanced-aicode>=1.1.0",
    "advanced-askai",
    "pywinpty; platform_system=='Windows'",
    "codeup>=1.0.1",
]


[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
version = { attr = "zcmds.__version__" }

[dependency-groups]
test = [
    "pyright",
    "pytest",
    "wheel",
    "ruff",
]

[tool.ruff]
# Enable import sorting (I), unused imports (F401), and other pyflakes rules
line-length = 88
target-version = "py310"

[tool.ruff.lint]
# Enable import sorting and unused import removal
select = [
    "I",     # isort - import sorting
    "F",     # pyflakes - includes unused imports (F401)
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
]
ignore = ["E501"]  # Ignore line too long (black-style compatibility)
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
# Configure import sorting to match isort's black profile
force-single-line = false
force-sort-within-sections = false
lines-after-imports = 2

[tool.ruff.format]
# Enable black-style formatting
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
include = ["src"]
exclude = [
    "build/",
    "dist/",
    ".venv/",
    "venv/",
    "**/__pycache__",
    "**/.pytest_cache",
    "**/.ruff_cache",
    "**/.git",
    "**/*.egg-info",
]

# Type checking configuration
typeCheckingMode = "strict"
pythonVersion = "3.10"
pythonPlatform = "All"
useLibraryCodeForTypes = true
analyzeUnannotatedFunctions = true
strictParameterNoneValue = true
strictListInference = true
strictDictionaryInference = true
strictSetInference = true

# Report settings
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImport = false
reportUnusedClass = false
reportUnusedFunction = false
reportUnusedVariable = false
reportDuplicateImport = true
reportWildcardImportFromLibrary = true
reportOptionalSubscript = false
reportOptionalMemberAccess = false
reportOptionalCall = false
reportOptionalIterable = false
reportOptionalContextManager = false
reportOptionalOperand = false
reportGeneralTypeIssues = "warning"  # AMNESTY: Downgraded from true/error
reportPropertyTypeMismatch = true
reportFunctionMemberAccess = true
reportPrivateUsage = false
reportConstantRedefinition = false
reportIncompatibleMethodOverride = "warning"  # AMNESTY: Downgraded from true/error
reportIncompatibleVariableOverride = true
reportInconsistentConstructor = true
reportOverlappingOverload = true
reportMissingSuperCall = false
reportUninitializedInstanceVariable = false
reportInvalidStringEscapeSequence = true
reportUnknownParameterType = "warning"  # TODO: Re-enable after fixing
reportUnknownArgumentType = "warning"  # AMNESTY: Downgraded from error
reportUnknownLambdaType = "warning"  # AMNESTY: Downgraded from error
reportUnknownVariableType = "warning"  # AMNESTY: Downgraded from error
reportUnknownMemberType = "warning"  # AMNESTY: Downgraded from error
reportMissingParameterType = "warning"  # TODO: Re-enable after fixing
reportMissingTypeArgument = "warning"  # AMNESTY: Downgraded from error
reportArgumentType = "warning"  # AMNESTY: Downgraded from error
reportCallIssue = "warning"  # AMNESTY: Downgraded from error
reportIndexIssue = "warning"  # AMNESTY: Downgraded from error
reportAttributeAccessIssue = "warning"  # AMNESTY: Downgraded from error
reportPossiblyUnboundVariable = "warning"  # AMNESTY: Downgraded from error
reportMissingReturnType = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedClassDecorator = "error"
reportUntypedBaseClass = "error"
reportUntypedNamedTuple = "error"
reportInvalidTypeVarUse = true
reportCallInDefaultInitializer = false
reportUnnecessaryIsInstance = false
reportUnnecessaryCast = false
reportUnnecessaryComparison = false
reportUnnecessaryContains = false
reportAssertAlwaysTrue = false
reportSelfClsParameterName = true
reportImplicitStringConcatenation = false
reportUndefinedVariable = true
reportUnboundVariable = true
reportInvalidStubStatement = true
reportIncompleteStub = true
reportUnsupportedDunderAll = true
reportUnusedCallResult = false
reportUnusedCoroutine = true
reportUnusedExpression = false
reportUnnecessaryTypeIgnoreComment = false
reportMatchNotExhaustive = true

# Display settings
verboseOutput = false
autoImportCompletions = false
indexing = false
functionSignatureDisplay = "compact"

# Task list tokens
taskListTokens = ["TODO", "FIXME", "BUG", "HACK", "NOTE"]

[[tool.pyright.executionEnvironments]]
root = "."
pythonVersion = "3.10"
pythonPlatform = "All"
